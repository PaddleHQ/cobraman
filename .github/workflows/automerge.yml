# DO NOT EDIT: This file should only be modified in the `go-library-template` repo.

# This workflow automatically approves and merges safe pull requests created by Dependabot, or automatic PRs from
# paddle-config and go-library-template repositories.

name: Auto Approve and Merge

on:
  workflow_dispatch:
    inputs:
      workflow:
        description: 'Name of the workflow that triggered this action'
        required: true
        type: string
      draft_pr:
        description: 'Is the PR a draft?'
        required: true
        type: choice
        options:
          - 'true'
          - 'false'
      user_login:
        description: 'Login of the user who created the PR'
        required: true
        type: string
      labels:
        description: 'Labels of the PR, e.g. origin:dependabot'
        type: string
      sha:
        description: 'SHA of the PR head commit'
        required: true
        type: string
      base_ref:
        description: 'Base branch of the PR'
        required: true
        type: string
      html_url:
        description: 'HTML URL of the PR'
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  checks: read
  pull-requests: write

jobs:
  # --
  # Wait for the PR to be ready for automerge
  wait_for_ready:
    name: Check source and wait for PR to be ready
    runs-on: ubuntu-latest

    if: |-
      github.event.inputs.draft_pr == 'false' && (
        github.event.inputs.user_login == 'dependabot[bot]' ||
        github.event.inputs.user_login == 'paddle-repo-file-sync[bot]'
      )

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit

      - name: "🔐 Verify Automerge Secret Available"
        id: check-secret
        run: |
          if [ -z "${{ secrets.AUTO_APPROVER_PRIVATE_KEY }}" ]; then
            echo "❌ No automerge secret found - automerge disabled"
          else
            echo "✅ Automerge secret available"
            echo "can_automerge=true" >> $GITHUB_OUTPUT
          fi

      - name: "🔄 Wait for calling workflow to be ready"
        if: steps.check-secret.outputs.can_automerge == 'true'
        uses: wechuli/allcheckspassed@e22f45a4f25f4cf821d1273705ac233355400db1 # v1.2.0
        id: check-caller
        continue-on-error: true
        with:
          delay: '0'
          checks_include: ${{ github.event.inputs.workflow }}

      - name: "⏳ Wait for All Required Checks to Pass"
        if: |-
          steps.check-secret.outputs.can_automerge == 'true' &&
          steps.check-caller.outcome == 'success'
        uses: wechuli/allcheckspassed@e22f45a4f25f4cf821d1273705ac233355400db1 # v1.2.0
        id: check-all
        continue-on-error: true
        with:
          delay: '0'
          poll: false
          checks_exclude: Apiiro,\[Automerge\/.*\].*

      - name: "✅ Confirm Automerge Eligibility"
        id: check-failure
        if: |-
          steps.check-secret.outputs.can_automerge == 'true' &&
          steps.check-caller.outcome == 'success' &&
          steps.check-all.outcome == 'success'
        run: |
          echo "✅ All checks passed - automerge enabled"
          echo "can_automerge=true" >> $GITHUB_OUTPUT

    outputs:
      can_automerge: ${{ steps.check-secret.outputs.can_automerge && steps.check-failure.outputs.can_automerge }}

  # --
  # Check the source and the changes of the PR
  # One of the following jobs must pass for the PR to be merged automatically

  check_dependabot_changes:
    name: "[Automerge/Check] 🤖 Validate Dependabot Changes"
    needs: wait_for_ready
    runs-on: ubuntu-latest

    if: |-
      needs.wait_for_ready.outputs.can_automerge == 'true' &&
      github.event.inputs.user_login == 'dependabot[bot]'

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit

      - name: "📥 Checkout PR Code"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.inputs.sha }}
          persist-credentials: false
          fetch-depth: 0

      - name: "🔍 Analyze Dependency Changes"
        id: check-external
        run: |
          echo "🔍 Checking dependency changes in go.mod..."

          if git diff --quiet origin/${{ github.event.repository.default_branch }} -- 'go.mod'; then
            echo "ℹ️ No changes in go.mod - automerge enabled"
            echo "can_automerge=true" >> $GITHUB_OUTPUT
          elif git diff --quiet -G "github.com/PaddleHQ/" origin/${{ github.event.repository.default_branch }} -- go.mod; then
            echo "⚠️ No PaddleHQ dependencies updated - automerge not enabled. Requires manual review"
          else
            echo "✅ PaddleHQ dependencies updated - automerge enabled"
            echo "can_automerge=true" >> $GITHUB_OUTPUT
          fi

    outputs:
      can_automerge: ${{ steps.check-external.outputs.can_automerge }}

  check_library_template_changes:
    name: "[Automerge/Check] 📝 Check GO Library Template changes"
    needs: wait_for_ready
    runs-on: ubuntu-latest

    if: |-
      needs.wait_for_ready.outputs.can_automerge == 'true' &&
      github.event.inputs.user_login == 'paddle-repo-file-sync[bot]' &&
      (
        contains(github.event.inputs.labels, 'origin:go-library-template') ||
        contains(github.event.inputs.labels, 'origin:php-library-template')
      )

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit

      - name: "📥 Checkout PR Code"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.inputs.sha }}
          persist-credentials: false
          fetch-depth: 0

      - name: "🔍 Analyze Go Library Template Changes"
        id: check-files
        run: |
          echo "🔍 Checking which files were modified by from a library template sync..."

          # Check if only safe files were modified (workflows and dependabot config)
          if git diff --quiet origin/${{ github.event.repository.default_branch }} -- ':!.github/actions' ':!.github/workflows' ':!.github/dependabot.yml'; then
            echo "✅ Only safe template files modified (workflows/dependabot) - automerge enabled"
            echo "can_automerge=true" >> $GITHUB_OUTPUT
          else
            echo "⚠️ Updates to non-standard files - automerge not enabled. Requires manual review"
          fi

    outputs:
      can_automerge: ${{ steps.check-files.outputs.can_automerge }}

  check_paddle_config_changes:
    name: "[Automerge/Check] ⚙️ Check Paddle Config Changes"
    needs: wait_for_ready
    runs-on: ubuntu-latest

    if: |-
      needs.wait_for_ready.outputs.can_automerge == 'true' &&
      github.event.inputs.user_login == 'paddle-repo-file-sync[bot]' &&
      contains(github.event.inputs.labels, 'origin:paddle-config')

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit

      - name: "📥 Checkout PR Code"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.inputs.sha }}
          persist-credentials: false
          fetch-depth: 0

      - name: "📖 Read Build Configuration"
        id: build_config
        uses: pietrobolcato/action-read-yaml@9f13718d61111b69f30ab4ac683e67a56d254e1d # 1.1.0
        with:
          config: ${{ github.workspace }}/build-config.yaml

      - name: "🔍 Analyze Paddle Config Changes"
        id: check-additions
        if: steps.build_config.outputs['automergePaddleConfig'] == 'true'
        run: |
          echo "🔍 Checking for file deletions in config sync..."

          LINES_DELETED=$(git diff --shortstat origin/${{ github.event.inputs.base_ref }} \
            | awk '{files+=$1; inserted+=$4; deleted+=$6} END {print deleted}')

          if [ "$LINES_DELETED" -gt 0 ]; then
            echo "⚠️ Files deleted - automerge not enabled. Needs manual review"
          else
            echo "✅ No files deleted (only additions/modifications) - automerge enabled"
            echo "can_automerge=true" >> $GITHUB_OUTPUT
          fi

    outputs:
      can_automerge: ${{ steps.check-additions.outputs.can_automerge }}

  # --
  # If automerge is enabled then approve and merge the PR

  automerge:
    name: "[Automerge/Merge] 🚀 Auto Approve and Merge"
    runs-on: ubuntu-latest

    needs:
      - wait_for_ready
      - check_dependabot_changes
      - check_library_template_changes
      - check_paddle_config_changes

    # Run if any of the check jobs approved automerge
    # always() ensures this is a `or` condition and does not depend on ALL the checks passing, but only one.
    if: |-
      always() && (
        needs.check_dependabot_changes.outputs.can_automerge == 'true' ||
        needs.check_library_template_changes.outputs.can_automerge == 'true' ||
        needs.check_paddle_config_changes.outputs.can_automerge == 'true'
      )

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit

      - name: "📥 Checkout PR Code"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.inputs.sha }}
          persist-credentials: false

      - name: "🔑 Generate GitHub App Token"
        id: generate-token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v1
        with:
          app-id: 1045853
          private-key: ${{ secrets.AUTO_APPROVER_PRIVATE_KEY }}

      - name: "✅ Auto Approve PR"
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.inputs.html_url }}
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}

      - name: "🔀 Auto Merge PR"
        run: gh pr merge --admin --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.inputs.html_url }}
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
